#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.1
#  in conjunction with Tcl version 8.6
#    Jan 22, 2022 10:00:22 PM +07  platform: Windows NT

from cgitb import text
from distutils import command
from distutils.command.config import config
import email
import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os

import new_mail_support
import email_notify

class newMailMenu:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("301x111+296+259")
        top.minsize(120, 1)
        top.maxsize(3204, 1061)
        top.resizable(1,  1)
        top.title("Add New Email")
        top.configure(background="#d9d9d9")

        self.top = top

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label1 = tk.Label(self.top)
        self.Label1.place(relx=0.106, rely=0.171, height=18, width=55)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 10")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#f0f0f0f0f0f0")
        self.Label1.configure(text='''Email :''')

        entry_str = tk.StringVar()
        self.Entry1 = tk.Entry(self.top, textvariable=entry_str)
        self.Entry1.place(relx=0.276, rely=0.171, height=20, relwidth=0.578)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")
        
        self.noteGmail = tk.Label(self.top)
        self.noteGmail.place(relx=0.13, rely=0.387, height=19, width=164)
        self.noteGmail.configure(anchor='w')
        self.noteGmail.configure(background="#d9d9d9")
        self.noteGmail.configure(compound='left')
        self.noteGmail.configure(disabledforeground="#a3a3a3")
        self.noteGmail.configure(foreground="#000000")
        self.noteGmail.configure(text='''Need to use a gmail account.''')

        # save user email
        def getEmail():
            email_input = entry_str.get()
            result = email_notify.add_dest_addr(email_input)
            # email already added
            if result == -1:
                self.Entry1.delete(0, 'end')
                self.noteGmail.configure(text='''Email has already been added.''')
            # new email added
            else:
                self.Entry1.delete(0, 'end')
                self.noteGmail.configure(text='''Email added.''')
        
        # remove user email
        def removeEmail():
            email_input = entry_str.get()
            result = email_notify.del_dest_addr(email_input)
            # email isn't in the text file
            if result == -1:
                self.Entry1.delete(0, 'end')
                self.noteGmail.configure(text='''Email isn't found.''')
            # email removed
            else:
                self.Entry1.delete(0, 'end')
                self.noteGmail.configure(text='''Email removed.''')

        self.saveMail = tk.Button(self.top)
        self.saveMail.place(relx=0.664, rely=0.631, height=24, width=57)
        self.saveMail.configure(activebackground="#ececec")
        self.saveMail.configure(activeforeground="#000000")
        self.saveMail.configure(background="#d9d9d9")
        self.saveMail.configure(compound='left')
        self.saveMail.configure(disabledforeground="#a3a3a3")
        self.saveMail.configure(font="-family {Segoe UI} -size 10")
        self.saveMail.configure(foreground="#000000")
        self.saveMail.configure(highlightbackground="#d9d9d9")
        self.saveMail.configure(highlightcolor="black")
        self.saveMail.configure(pady="0")
        self.saveMail.configure(text='''Save''')
        self.saveMail.configure(command=getEmail)
        
        self.cancelMail = tk.Button(self.top)
        self.cancelMail.place(relx=0.133, rely=0.631, height=24, width=57)
        self.cancelMail.configure(activebackground="#ececec")
        self.cancelMail.configure(activeforeground="#000000")
        self.cancelMail.configure(background="#d9d9d9")
        self.cancelMail.configure(compound='left')
        self.cancelMail.configure(disabledforeground="#a3a3a3")
        self.cancelMail.configure(font="-family {Segoe UI} -size 10")
        self.cancelMail.configure(foreground="#000000")
        self.cancelMail.configure(highlightbackground="#d9d9d9")
        self.cancelMail.configure(highlightcolor="black")
        self.cancelMail.configure(pady="0")
        self.cancelMail.configure(text='''Cancel''')
        self.cancelMail.configure(command=lambda: exit())

        self.removeMail = tk.Button(self.top)
        self.removeMail.place(relx=0.399, rely=0.631, height=24, width=57)
        self.removeMail.configure(activebackground="#ececec")
        self.removeMail.configure(activeforeground="#000000")
        self.removeMail.configure(background="#d9d9d9")
        self.removeMail.configure(compound='left')
        self.removeMail.configure(disabledforeground="#a3a3a3")
        self.removeMail.configure(font="-family {Segoe UI} -size 10")
        self.removeMail.configure(foreground="#000000")
        self.removeMail.configure(highlightbackground="#d9d9d9")
        self.removeMail.configure(highlightcolor="black")
        self.removeMail.configure(pady="0")
        self.removeMail.configure(text='''Remove''')
        self.removeMail.configure(command=removeEmail)

def start_up():
    new_mail_support.main()

if __name__ == '__main__':
    new_mail_support.main()




